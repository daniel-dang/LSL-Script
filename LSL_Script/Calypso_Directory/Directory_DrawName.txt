/*
Objective:
    - This script's objective is to draw a person's name on a prim. This script will received
    message via listen event and listen function. The message that the listen event will recieved
    will consist of the person's first name, a separator and the person's last name. There will be 
    a LSL build-in function that will get the first name and last name except the separator. 

Script Author: Daniel Dang
*/

//Listen channel
integer List_Operation = 253254;                            //Channel to listen to list_operation object

//Listen Control
integer ListOperation_Listen;                               //Listen control for listen event

/*
This function will draw the person's name with 2 string parameter, first name and last name. 
*/
Draw_Name(string FirstName, string LastName)
{
    //Text control variable
    integer FontSize = 25;  
    integer PenSize = 7;
    string color = "Black";
    
    string commandList = ""; //store commands variable
    
    commandList = osSetFontSize(commandList, FontSize);    //Set font size
    commandList = osSetPenColor(commandList, color);       //Set font color
    commandList = osMovePen(commandList, 5, 60);           //Move pen to specific coordinate of the plane
    commandList = osDrawText(commandList, FirstName);      //Draw name
    commandList = osMovePen(commandList, 5, 130);          //Move pen again to specific coordinate
    commandList = osDrawText(commandList, LastName);       //Draw name
    
    osSetDynamicTextureData("", "vector", commandList, "width:256,height:256", 0);  //Draw texture
}

//Main state
default
{
    state_entry()
    {
        ListOperation_Listen = llListen(List_Operation, "", NULL_KEY, "");      //Activate listen
    }
    //Listen event - this event will catch any message that generated by llSay in different channel, require to activate listen first.
    listen (integer channel, string name, key id, string msg)
    {
        llListenRemove(ListOperation_Listen);                                   //Deactivate listen
        //If the channel = to channel of List_Operation (we set List_Operation channel number above)
        if (channel == List_Operation)
        {
            //String format of the message that will be received: "firstname:lastname"
            list studentName = llParseString2List(msg, ":", "");                        //Convert string to a list with extract the separator specify. 
            Draw_Name(llList2String(studentName,0), llList2String(studentName,1));      //Pass the value of first name and last name in the list to draw
                                                                                        //name function
        }
        llResetScript();                                                                //Reset script
    }
}